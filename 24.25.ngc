(Manual cut of standard Chickiboom neck. Written by Tony Diethelm. Revisions managed with Git.)

(assume 1/4" bit. 6.35mm diameter. 6.2mm actually. Oh hell, use 6.2mm.)

(This is tested to work as of 10-23-16. -TD)


(set everything up.)

G017	(XY plane)
G21  	(metric)
G90	(absolute programming)

F1000	(feed rate 1000mm/min)
S1	(spindle speed 1rev/min. We don't use spindle speeds, but needed for router to turn on.)

G00 Z35 (safe Z)




(use #1-#33 as local variables)

#1 = [6.2/2.0]	(use for bit diameter)
#2 = [-10.0]	(need a start point outside the wood on Y axis)
#3 = [150.0]	(need an end point outside the wood on the Y axis)
#4 = [0+#1]	(keep track of current X position)
#5 = [50.0]	(safe Z height)
#6 = [24.5-7.0]	(cutting Z height)
#7 = [2.0]	(amount of buffer from upper/lower boundary to keep on rough cut)
#8 = [#1]	(amount of bit to use to cut)
#9 = [0.0]	(lower boundary of a slot)
#10 = [0.0]	(upper boundary of a slot)





(Set up the subroutine for slot cutting)

o<SLOTCUTS> SUB
(setup stuff)
G00 Z#5			(bit up)
G00 X#4 Y#2 Z#5		(safely drive to beginning)
M3 G01 Z#6		(router on, bit down)

(set up a while loop to do step downs. 


(set up a WHILE loop to do gross cuts.)
(WHILE starting/current X is less than target-#1-1, go to #4, go across, come back, increment #4 by #8.)

#11 = 0
o101 WHILE [#4 LT [#10-#1-#7]] 
	G01 X#4		(go to current/starting X)
	o102 IF [#11 EQ 0]
		G01 Y#3		(go across)
		#11 = 1		(We are now high, next rep needs to come back)
	o102 ELSE
		G01 Y#2		(come back)
		#11 = 0		(We are now low, next rep needs to go across)
	o102 ENDIF
	#4 = [#4+#8]	(increment the X position)
o101 ENDWHILE 

G00 Y#2		(come back, fast. Needed to reset Y so the rest of this works with minimal logic.)
#4 = [#9+#1]	(final cut, lower end, set X)
G00 X#4		(go to lower end)
G01 Y#3		(go across)
#4 = [#10-#1]	(final cut, high end, set X)
G00 X#4		(go to high end)
G01 Y#2		(come back)

G00 Z#5	M5	(bit up, stop router)
o<SLOTCUTS> ENDSUB





(back brace cut. 0 to 60, 5mm deep)
(set up variables)
#6 = [24.5-5.0]		(cutting Z height)
#9 = [0.0]		(set lower boundary)
#10 = [60.0]		(set upper boundary)
#4 = [#9+#1+#7]		(set starting X, 2mm up from the end. Go back do clean cuts)

(call subroutine)
o<SLOTCUTS> call [#1][#2][#3][#4][#5][#6][#7][#8][#9][#10]



(bridge slot.  80 to 91.1, 7mm deep)
(set up variables)
#6 = [24.5-3.0]		(cutting Z height)
#9 = [80.0]		(set lower boundary)
#10 = [91.1]		(set upper boundary)
#4 = [#9+#1+#7]		(set starting X, 2mm up from the end. Go back do clean cuts)
(call subroutine)
o<SLOTCUTS> call [#1][#2][#3][#4][#5][#6][#7][#8][#9][#10]

(bridge slot.  80 to 91.1, 7mm deep)
(set up variables)
#6 = [24.5-7.0]		(cutting Z height)
#9 = [80.0]		(set lower boundary)
#10 = [91.1]		(set upper boundary)
#4 = [#9+#1+#7]		(set starting X, 2mm up from the end. Go back do clean cuts)
(call subroutine)
o<SLOTCUTS> call [#1][#2][#3][#4][#5][#6][#7][#8][#9][#10]



(box cut. 101.1 to 121.1, 7mm deep)
(set up variables)
#6 = [24.5-3.0]		(cutting Z height)
#9 = [101.1]		(set lower boundary)
#10 = [121.1]		(set upper boundary)
#4 = [#9+#1+#7]		(set starting X, 2mm up from the end. Go back do clean cuts)
(call subroutine)
o<SLOTCUTS> call [#1][#2][#3][#4][#5][#6][#7][#8][#9][#10]

(box cut. 101.1 to 121.1, 7mm deep)
(set up variables)
#6 = [24.5-7.0]		(cutting Z height)
#9 = [101.1]		(set lower boundary)
#10 = [121.1]		(set upper boundary)
#4 = [#9+#1+#7]		(set starting X, 2mm up from the end. Go back do clean cuts)
(call subroutine)
o<SLOTCUTS> call [#1][#2][#3][#4][#5][#6][#7][#8][#9][#10]




(nut slot   695.95 to 707.05, 7mm deep)
(set up variables)
#6 = [24.5-3.0]		(cutting Z height)
#9 = [695.95]		(set lower boundary)
#10 = [707.05]		(set upper boundary)
#4 = [#9+#1+#7]		(set starting X, 2mm up from the end. Go back do clean cuts)
(call subroutine)
o<SLOTCUTS> call [#1][#2][#3][#4][#5][#6][#7][#8][#9][#10]

(nut slot   695.95 to 707.05, 7mm deep)
(set up variables)
#6 = [24.5-7.0]		(cutting Z height)
#9 = [695.95]		(set lower boundary)
#10 = [707.05]		(set upper boundary)
#4 = [#9+#1+#7]		(set starting X, 2mm up from the end. Go back do clean cuts)
(call subroutine)
o<SLOTCUTS> call [#1][#2][#3][#4][#5][#6][#7][#8][#9][#10]



(headstock   732.05 to 832.05, 14.4mm deep down to 11mm target)
(set up variables)
#6 = [24.5-4.0]		(cutting Z height)
#9 = [732.05]		(set lower boundary)
#10 = [832.05]		(set upper boundary)
#4 = [#9+#1+#7]		(set starting X, 2mm up from the end. Go back do clean cuts)
(call subroutine)
o<SLOTCUTS> call [#1][#2][#3][#4][#5][#6][#7][#8][#9][#10]

(headstock   732.05 to 832.05, 14.4mm deep down to 11mm target)
(set up variables)
#6 = [24.5-8.0]		(cutting Z height)
#9 = [732.05]		(set lower boundary)
#10 = [832.05]		(set upper boundary)
#4 = [#9+#1+#7]		(set starting X, 2mm up from the end. Go back do clean cuts)
(call subroutine)
o<SLOTCUTS> call [#1][#2][#3][#4][#5][#6][#7][#8][#9][#10]

(headstock   732.05 to 832.05, 14.4mm deep down to 11mm target)
(set up variables)
#6 = [24.5-12.0]		(cutting Z height)
#9 = [732.05]		(set lower boundary)
#10 = [832.05]		(set upper boundary)
#4 = [#9+#1+#7]		(set starting X, 2mm up from the end. Go back do clean cuts)
(call subroutine)
o<SLOTCUTS> call [#1][#2][#3][#4][#5][#6][#7][#8][#9][#10]

(headstock   732.05 to 832.05, 14.4mm deep down to 11mm target)
(set up variables)
#6 = [24.5-14.4]		(cutting Z height)
#9 = [732.05]		(set lower boundary)
#10 = [832.05]		(set upper boundary)
#4 = [#9+#1+#7]		(set starting X, 2mm up from the end. Go back do clean cuts)
(call subroutine)
o<SLOTCUTS> call [#1][#2][#3][#4][#5][#6][#7][#8][#9][#10]



M5		(stop spindle)

M2		(end program)

